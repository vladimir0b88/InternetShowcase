@page "/ProductTypesTable"
<PageTitle>Таблица типов товара</PageTitle>

@attribute [Authorize(Roles = Roles.Administrator)]

@inject IProductTypeService productTypeService

<ErrorModal @ref="modal"></ErrorModal>

<p class="fs-3">Типы товаров</p>

@if (productTypes is null)
{
    <LoadingSpinner></LoadingSpinner>
}
else
{
    <QuickGrid Items="productTypes" Class="w-auto table table-striped table-bordered">
        <PropertyColumn Property="@(p => p.Id)"></PropertyColumn>

        <PropertyColumn Property="@(p => p.Name)" Title="Наименование" Sortable="true"></PropertyColumn>
    </QuickGrid>
}

@code {
    private IQueryable<ProductType>? productTypes = null;

    private ErrorModal modal = new();

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }


    async Task GetProducts()
    {
        var result = await productTypeService.GetAllProductTypes();

        switch (result)
        {
            case SuccessResult<List<ProductType>> successResult:
                productTypes = successResult.Data.AsQueryable();
                break;

            case ErrorResult<List<ProductType>> errorResult:
                await modal.ShowModal(errorResult);
                break;
        }
    }
}