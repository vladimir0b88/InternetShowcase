@page "/ProductTypesTable"
<PageTitle>Таблица типов товара</PageTitle>

@inject IProductTypeService productTypeService


<AuthorizeView>
    <NotAuthorized>
        <h1>Бро, надо авторизироваться</h1>
    </NotAuthorized>
    <Authorized>
        <h1>Авторизован как: @context.User.Claims.FirstOrDefault(c => c.Type == "userName")!.Value</h1>
        <h3>Типы товаров</h3>

        <QuickGrid Items="_productTypes" Class="w-auto table table-striped table-bordered">
            <PropertyColumn Property="@(p => p.Id)"></PropertyColumn>

            <PropertyColumn Property="@(p => p.Name)" Title="Наименование" Sortable="true"></PropertyColumn>
        </QuickGrid>
    </Authorized>

</AuthorizeView>





@code {
    private IQueryable<ProductType>? _productTypes = null;

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }


    async Task GetProducts()
    {
        var result = await productTypeService.GetAllProductTypes();

        if (result is SuccessResult<List<ProductType>> successResult)
            _productTypes = successResult.Data.AsQueryable();
    }
}