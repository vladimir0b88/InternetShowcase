@page "/CreateProductType"
<PageTitle>Создание типа товара</PageTitle>

@attribute [Authorize(Roles = Roles.Administrator)]

@inject IProductTypeService productTypeService
@inject NavigationManager navManager

<ErrorModal @ref="modal"></ErrorModal>

<h3>Создание типа товара</h3>

<EditForm Model="_createDto" OnValidSubmit="Submit">

    <FluentValidationValidator />
    <ValidationSummary />

    <div class="form-group">

        <label class="col-form-label">Название типа товара</label>
        <div class="col-xs-auto col-sm-6 col-md-4 col-lg-3 col-xl-2">
            <InputText @bind-Value="@_createDto.Name" class="form-control" maxlength="30"></InputText>
        </div>

        <div class="col-md-2 mt-2">
            <Button Type="ButtonType.Submit" Color="ButtonColor.Success">Создать</Button>
        </div>
    </div>
</EditForm>


@code {
    private ProductTypeCreateDto _createDto = new();

    private ErrorModal modal = new();

    async Task Submit()
    {
        var result = await productTypeService.AddProductType(_createDto);

        if (result is ErrorResult errorResult)
        {
            await modal.ShowModal(errorResult);
            return;
        }

        navManager.NavigateTo("ProductTypes");
    }
}
