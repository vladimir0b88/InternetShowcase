@page "/ProductsTable"
<PageTitle>Таблица продуктов</PageTitle>

@attribute [Authorize(Roles = Roles.Administrator)]

@inject IProductService productService

<h3>Продукты</h3>

@if (products is null)
{
    <LoadingSpinner></LoadingSpinner>
}
else
{
    <QuickGrid Items="products" Class="w-auto table table-striped table-bordered">
        <PropertyColumn Property="@(p => p.Id)"></PropertyColumn>

        <PropertyColumn Property="@(p => p.TypeId)" Title="Тип товара"></PropertyColumn>

        <PropertyColumn Property="@(p => p.Name)" Title="Наименование" Sortable="true"></PropertyColumn>

        <PropertyColumn Property="@(p => p.Cost)" Title="Стоимость" Sortable="true"></PropertyColumn>

        <PropertyColumn Property="@(p => p.Description)" Title="Описание" Class="text-break"></PropertyColumn>
    </QuickGrid>
}

@code {
    private IQueryable<Product>? products = null;

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }


    async Task GetProducts()
    {
        var result = await productService.GetAllProducts();

        if (result is SuccessResult<List<Product>> successResult)
            products = successResult.Data.AsQueryable();
    }
}
